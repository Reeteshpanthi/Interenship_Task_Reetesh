1-
SELECT s.department_id,d.department_name,
COUNT(s.department_id) num_of_stu 
FROM students s 
INNER JOIN departments d 
ON s.department_id=d.department_id 
GROUP BY department_id;

2-
select c.course_name,p.professor_id,p.first_name
from courses c
join professors p on c.professor_id = p.professor_id


3-


4-
# List All Students Who Have Not Enrolled in Any Courses

SELECT s.student_id,s.first_name
FROM students s
LEFT JOIN enrollments e on s.student_id=e.student_id
WHERE e.student_id is null;

5-
# Find the Number of Courses Offered by Each Department

SELECT c.department_id,d.department_name,
COUNT(c.department_id)
FROM courses c 
INNER JOIN departments d 
ON c.department_id=d.department_id
GROUP BY c.department_id;

6-
 # List All Students Who Have Taken a Specific Course (e.g., 'Database Systems')
 
 SELECT s.student_id,s.first_name,s.last_name,c.course_id,course_name
 FROM students s 
 INNER JOIN enrollments en on s.student_id=en.student_id INNER JOIN courses c ON en.course_id=c.course_id
 WHERE c.course_name="Database Systems";

7-
SELECT c.course_name,c.course_id, COUNT(e.student_id) AS enrollment_count
FROM enrollments e
JOIN courses c ON e.course_id = c.course_id
GROUP BY c.course_name
ORDER BY enrollment_count DESC
LIMIT 1;

8-
SELECT avg(c.credits),d.department_id
FROM courses c
INNER JOIN departments d
ON c.department_id=d.department_id;

9-
SELECT c.professor_id,p.first_name, count(c.department_id)
FROM courses c
INNER JOIN professors p
ON c.professor_id=p.professor_id
GROUP BY c.professor_id;



10-
# Get the Highest and Lowest Grade in a Specific Course (e.g., 'Operating Systems')


SELECT c.course_name,e.enrollment_id,MAX(grade),MIN(grade)
FROM courses c
INNER JOIN enrollments e
ON c.course_id=e.course_id
WHERE course_name="Operating Systems";
